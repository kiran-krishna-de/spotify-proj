{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "krishh-adf-kiran"
		},
		"LS_datalake_krishhdatalakestore_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_datalake_krishhdatalakestore'"
		},
		"LS_sql_azure_kiran_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_sql_azure_kiran'"
		},
		"LS_datalake_krishhdatalakestore_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://krishhdatalakestore.dfs.core.windows.net/"
		},
		"LS_sql_azure_kiran_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "krish.database.windows.net"
		},
		"LS_sql_azure_kiran_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "kiran"
		},
		"LS_sql_azure_kiran_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kiran"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/OLTP_data_ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get cdc",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_datalake_json_param",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"directory": "cdc",
									"file": "cdc.json"
								}
							}
						}
					},
					{
						"name": "look number of changed records",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "get cdc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select count(*) as no_of_records from @{pipeline().parameters.schema}.@{pipeline().parameters.table} where @{pipeline().parameters.cdc_column} > '@{if(empty(pipeline().parameters.back_date),activity('get cdc').output.firstRow.cdc,pipeline().parameters.back_date)}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_sql_kiran",
								"type": "DatasetReference",
								"parameters": {
									"schema": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"table": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "if changed records available to load",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "look number of changed records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('look number of changed records').output.firstRow.no_of_records,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "do not have changed records to load",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy each table to bronze",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{pipeline().parameters.schema}.@{pipeline().parameters.table} where @{pipeline().parameters.cdc_column} > '@{if(empty(pipeline().parameters.back_date),activity('get cdc').output.firstRow.cdc,pipeline().parameters.back_date)}'\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_sql_kiran",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@pipeline().parameters.schema",
													"type": "Expression"
												},
												"table": {
													"value": "@pipeline().parameters.table",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_datalake_parquet_param",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"directory": {
													"value": "@pipeline().parameters.table",
													"type": "Expression"
												},
												"file": {
													"value": "@concat(pipeline().parameters.table,'.','parquet')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "update cdc",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "get new_watermark",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "cdc",
													"value": {
														"value": "@activity('get new_watermark').output.resultSets[0].rows[0].new_cdc",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_datalake_json_param",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"directory": "cdc",
												"file": "empty.json"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_datalake_json_param",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"directory": "cdc",
												"file": "cdc.json"
											}
										}
									]
								},
								{
									"name": "get new_watermark",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Copy each table to bronze",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LS_sql_azure_kiran",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "select max(@{pipeline().parameters.cdc_column}) as new_cdc from @{pipeline().parameters.schema}.@{pipeline().parameters.table}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"table": {
						"type": "string",
						"defaultValue": "DimUser"
					},
					"cdc_column": {
						"type": "string",
						"defaultValue": "updated_at"
					},
					"back_date": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_datalake_json_param')]",
				"[concat(variables('factoryId'), '/datasets/DS_sql_kiran')]",
				"[concat(variables('factoryId'), '/datasets/DS_datalake_parquet_param')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_sql_azure_kiran')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OLTP_data_ingestion_copy_loop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get all metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_datalake_json_param",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"directory": "cdc",
									"file": "meta_cdc.json"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get all metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get all metadata').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "get cdc",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"dataset": {
											"referenceName": "DS_datalake_json_param",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"directory": "cdc",
												"file": {
													"value": "@{item().table}_cdc.json",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "look number of changed records",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "get cdc",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select count(*) as no_of_records from @{item().schema}.@{item().table} where @{item().cdc_column} > '@{if(empty(item().back_date),activity('get cdc').output.firstRow.cdc,item().back_date)}'\n\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_sql_kiran",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().schema",
													"type": "Expression"
												},
												"table": {
													"value": "@item().table",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "if changed records available to load",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "look number of changed records",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('look number of changed records').output.firstRow.no_of_records,0)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "do not have changed records to load",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 5
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy each table to bronze",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select * from @{item().schema}.@{item().table} where @{item().cdc_column} > '@{if(empty(item().back_date),activity('get cdc').output.firstRow.cdc,item().back_date)}'\n",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_sql_kiran",
														"type": "DatasetReference",
														"parameters": {
															"schema": {
																"value": "@item().schema",
																"type": "Expression"
															},
															"table": {
																"value": "@item().table",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_datalake_parquet_param",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"directory": {
																"value": "@item().table",
																"type": "Expression"
															},
															"file": {
																"value": "@concat(item().table,'.','parquet')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "update cdc",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "get new_watermark",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"additionalColumns": [
															{
																"name": "cdc",
																"value": {
																	"value": "@activity('get new_watermark').output.resultSets[0].rows[0].new_cdc",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_datalake_json_param",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"directory": "cdc",
															"file": "empty.json"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_datalake_json_param",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"directory": "cdc",
															"file": {
																"value": "@{item().table}_cdc.json",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "get new_watermark",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "Copy each table to bronze",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "LS_sql_azure_kiran",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"type": "Query",
															"text": {
																"value": "select max(@{item().cdc_column}) as new_cdc from @{item().schema}.@{item().table}",
																"type": "Expression"
															}
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Alerts",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach table",
								"dependencyConditions": [
									"Succeeded",
									"Failed",
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-04.northcentralus.logic.azure.com:443/workflows/a8b9aa2109414e90a0675dd4f30d0b78/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=YNrgAmgmOW8e3VaRSa5X1Cscn69UaBt0oR8drT0_Dt0",
							"body": {
								"value": "{\n    \"pipeline_name\":\"@{pipeline().Pipeline}\",\n    \"pipeline_runId\":\"@{pipeline().RunId}\",\n    \"runtime\":\"@{utcNow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_datalake_json_param')]",
				"[concat(variables('factoryId'), '/datasets/DS_sql_kiran')]",
				"[concat(variables('factoryId'), '/datasets/DS_datalake_parquet_param')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_sql_azure_kiran')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_datalake_json_param')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_datalake_krishhdatalakestore",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_datalake_krishhdatalakestore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_datalake_parquet_param')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_datalake_krishhdatalakestore",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_datalake_krishhdatalakestore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sql_kiran')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql_azure_kiran",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql_azure_kiran')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_datalake_krishhdatalakestore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_datalake_krishhdatalakestore_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_datalake_krishhdatalakestore_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_sql_azure_kiran')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_sql_azure_kiran_properties_typeProperties_server')]",
					"database": "[parameters('LS_sql_azure_kiran_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_sql_azure_kiran_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_sql_azure_kiran_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}